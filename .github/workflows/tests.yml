#
# This workflow will install the package and run the unittests.
#

name: PyTest tests

on: push

permissions:
  contents: read

jobs:
  build:

    name: Pytest ${{ matrix.python-version }}, ${{matrix.os}}

    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        include:
          - os: "windows-latest"
            python-version: "3.12"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python-version}}
    - name: Set up Poetry
      uses: abatilo/actions-poetry@v4
      with:
        poetry-version: "2.1.1"
    - name: Inject dynamic versioning
      if: startswith(matrix.os, 'windows')
      run: |
        pipx inject poetry "poetry-dynamic-versioning[plugin]"
    - name: Install dependencies
      run: |
        poetry install --with dev
    - name: Test with pytest
      run: |
        poetry run pytest --cov=src/ --cov-report=term
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
